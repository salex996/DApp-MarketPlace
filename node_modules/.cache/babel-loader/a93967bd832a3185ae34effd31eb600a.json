{"ast":null,"code":"import { CID } from 'multiformats/cid';\nimport { configure } from './lib/configure.js';\nimport { toUrlSearchParams } from './lib/to-url-search-params.js';\nimport { createStat } from './files/stat.js';\nexport const createLs = configure((api, opts) => {\n  async function* ls(path) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const pathStr = `${path instanceof Uint8Array ? CID.decode(path) : path}`;\n\n    async function mapLink(link) {\n      let hash = link.Hash;\n\n      if (hash.includes('/')) {\n        const ipfsPath = hash.startsWith('/ipfs/') ? hash : `/ipfs/${hash}`;\n        const stats = await createStat(opts)(ipfsPath);\n        hash = stats.cid;\n      } else {\n        hash = CID.parse(hash);\n      }\n\n      const entry = {\n        name: link.Name,\n        path: pathStr + (link.Name ? `/${link.Name}` : ''),\n        size: link.Size,\n        cid: hash,\n        type: typeOf(link)\n      };\n\n      if (link.Mode) {\n        entry.mode = parseInt(link.Mode, 8);\n      }\n\n      if (link.Mtime !== undefined && link.Mtime !== null) {\n        entry.mtime = {\n          secs: link.Mtime\n        };\n\n        if (link.MtimeNsecs !== undefined && link.MtimeNsecs !== null) {\n          entry.mtime.nsecs = link.MtimeNsecs;\n        }\n      }\n\n      return entry;\n    }\n\n    const res = await api.post('ls', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: pathStr,\n        ...options\n      }),\n      headers: options.headers\n    });\n\n    for await (let result of res.ndjson()) {\n      result = result.Objects;\n\n      if (!result) {\n        throw new Error('expected .Objects in results');\n      }\n\n      result = result[0];\n\n      if (!result) {\n        throw new Error('expected one array in results.Objects');\n      }\n\n      const links = result.Links;\n\n      if (!Array.isArray(links)) {\n        throw new Error('expected one array in results.Objects[0].Links');\n      }\n\n      if (!links.length) {\n        yield mapLink(result);\n        return;\n      }\n\n      yield* links.map(mapLink);\n    }\n  }\n\n  return ls;\n});\n\nfunction typeOf(link) {\n  switch (link.Type) {\n    case 1:\n    case 5:\n      return 'dir';\n\n    case 2:\n      return 'file';\n\n    default:\n      return 'file';\n  }\n}","map":{"version":3,"names":["CID","configure","toUrlSearchParams","createStat","createLs","api","opts","ls","path","options","pathStr","Uint8Array","decode","mapLink","link","hash","Hash","includes","ipfsPath","startsWith","stats","cid","parse","entry","name","Name","size","Size","type","typeOf","Mode","mode","parseInt","Mtime","undefined","mtime","secs","MtimeNsecs","nsecs","res","post","signal","searchParams","arg","headers","result","ndjson","Objects","Error","links","Links","Array","isArray","length","map","Type"],"sources":["/home/salex/Blockchain/Bootcamp-repositorio/32-DApp con React - Marketplace de NFTs/node_modules/ipfs-http-client/esm/src/ls.js"],"sourcesContent":["import { CID } from 'multiformats/cid';\nimport { configure } from './lib/configure.js';\nimport { toUrlSearchParams } from './lib/to-url-search-params.js';\nimport { createStat } from './files/stat.js';\nexport const createLs = configure((api, opts) => {\n  async function* ls(path, options = {}) {\n    const pathStr = `${ path instanceof Uint8Array ? CID.decode(path) : path }`;\n    async function mapLink(link) {\n      let hash = link.Hash;\n      if (hash.includes('/')) {\n        const ipfsPath = hash.startsWith('/ipfs/') ? hash : `/ipfs/${ hash }`;\n        const stats = await createStat(opts)(ipfsPath);\n        hash = stats.cid;\n      } else {\n        hash = CID.parse(hash);\n      }\n      const entry = {\n        name: link.Name,\n        path: pathStr + (link.Name ? `/${ link.Name }` : ''),\n        size: link.Size,\n        cid: hash,\n        type: typeOf(link)\n      };\n      if (link.Mode) {\n        entry.mode = parseInt(link.Mode, 8);\n      }\n      if (link.Mtime !== undefined && link.Mtime !== null) {\n        entry.mtime = { secs: link.Mtime };\n        if (link.MtimeNsecs !== undefined && link.MtimeNsecs !== null) {\n          entry.mtime.nsecs = link.MtimeNsecs;\n        }\n      }\n      return entry;\n    }\n    const res = await api.post('ls', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: pathStr,\n        ...options\n      }),\n      headers: options.headers\n    });\n    for await (let result of res.ndjson()) {\n      result = result.Objects;\n      if (!result) {\n        throw new Error('expected .Objects in results');\n      }\n      result = result[0];\n      if (!result) {\n        throw new Error('expected one array in results.Objects');\n      }\n      const links = result.Links;\n      if (!Array.isArray(links)) {\n        throw new Error('expected one array in results.Objects[0].Links');\n      }\n      if (!links.length) {\n        yield mapLink(result);\n        return;\n      }\n      yield* links.map(mapLink);\n    }\n  }\n  return ls;\n});\nfunction typeOf(link) {\n  switch (link.Type) {\n  case 1:\n  case 5:\n    return 'dir';\n  case 2:\n    return 'file';\n  default:\n    return 'file';\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}