{"ast":null,"code":"import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nexport const createGet = configure(api => {\n  async function get(cid) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const res = await api.post('object/get', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${cid instanceof Uint8Array ? CID.decode(cid) : cid}`,\n        dataEncoding: 'base64',\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return {\n      Data: uint8ArrayFromString(data.Data, 'base64pad'),\n      Links: (data.Links || []).map(link => ({\n        Name: link.Name,\n        Hash: CID.parse(link.Hash),\n        Tsize: link.Size\n      }))\n    };\n  }\n\n  return get;\n});","map":{"version":3,"names":["CID","configure","toUrlSearchParams","fromString","uint8ArrayFromString","createGet","api","get","cid","options","res","post","signal","searchParams","arg","Uint8Array","decode","dataEncoding","headers","data","json","Data","Links","map","link","Name","Hash","parse","Tsize","Size"],"sources":["/home/salex/Blockchain/Bootcamp-repositorio/32-DApp con React - Marketplace de NFTs/node_modules/ipfs-http-client/esm/src/object/get.js"],"sourcesContent":["import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nexport const createGet = configure(api => {\n  async function get(cid, options = {}) {\n    const res = await api.post('object/get', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${ cid instanceof Uint8Array ? CID.decode(cid) : cid }`,\n        dataEncoding: 'base64',\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return {\n      Data: uint8ArrayFromString(data.Data, 'base64pad'),\n      Links: (data.Links || []).map(link => ({\n        Name: link.Name,\n        Hash: CID.parse(link.Hash),\n        Tsize: link.Size\n      }))\n    };\n  }\n  return get;\n});"],"mappings":"AAAA,SAASA,GAAT,QAAoB,kBAApB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,SAASC,UAAU,IAAIC,oBAAvB,QAAmD,yBAAnD;AACA,OAAO,MAAMC,SAAS,GAAGJ,SAAS,CAACK,GAAG,IAAI;EACxC,eAAeC,GAAf,CAAmBC,GAAnB,EAAsC;IAAA,IAAdC,OAAc,uEAAJ,EAAI;IACpC,MAAMC,GAAG,GAAG,MAAMJ,GAAG,CAACK,IAAJ,CAAS,YAAT,EAAuB;MACvCC,MAAM,EAAEH,OAAO,CAACG,MADuB;MAEvCC,YAAY,EAAEX,iBAAiB,CAAC;QAC9BY,GAAG,EAAG,GAAGN,GAAG,YAAYO,UAAf,GAA4Bf,GAAG,CAACgB,MAAJ,CAAWR,GAAX,CAA5B,GAA8CA,GAAK,EAD9B;QAE9BS,YAAY,EAAE,QAFgB;QAG9B,GAAGR;MAH2B,CAAD,CAFQ;MAOvCS,OAAO,EAAET,OAAO,CAACS;IAPsB,CAAvB,CAAlB;IASA,MAAMC,IAAI,GAAG,MAAMT,GAAG,CAACU,IAAJ,EAAnB;IACA,OAAO;MACLC,IAAI,EAAEjB,oBAAoB,CAACe,IAAI,CAACE,IAAN,EAAY,WAAZ,CADrB;MAELC,KAAK,EAAE,CAACH,IAAI,CAACG,KAAL,IAAc,EAAf,EAAmBC,GAAnB,CAAuBC,IAAI,KAAK;QACrCC,IAAI,EAAED,IAAI,CAACC,IAD0B;QAErCC,IAAI,EAAE1B,GAAG,CAAC2B,KAAJ,CAAUH,IAAI,CAACE,IAAf,CAF+B;QAGrCE,KAAK,EAAEJ,IAAI,CAACK;MAHyB,CAAL,CAA3B;IAFF,CAAP;EAQD;;EACD,OAAOtB,GAAP;AACD,CAtBiC,CAA3B"},"metadata":{},"sourceType":"module"}