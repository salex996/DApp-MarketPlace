{"ast":null,"code":"import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createStat = configure(api => {\n  async function stat() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const res = await api.post('bitswap/stat', {\n      searchParams: toUrlSearchParams(options),\n      signal: options.signal,\n      headers: options.headers\n    });\n    return toCoreInterface(await res.json());\n  }\n\n  return stat;\n});\n\nfunction toCoreInterface(res) {\n  return {\n    provideBufLen: res.ProvideBufLen,\n    wantlist: (res.Wantlist || []).map(k => CID.parse(k['/'])),\n    peers: res.Peers || [],\n    blocksReceived: BigInt(res.BlocksReceived),\n    dataReceived: BigInt(res.DataReceived),\n    blocksSent: BigInt(res.BlocksSent),\n    dataSent: BigInt(res.DataSent),\n    dupBlksReceived: BigInt(res.DupBlksReceived),\n    dupDataReceived: BigInt(res.DupDataReceived)\n  };\n}","map":{"version":3,"names":["CID","configure","toUrlSearchParams","createStat","api","stat","options","res","post","searchParams","signal","headers","toCoreInterface","json","provideBufLen","ProvideBufLen","wantlist","Wantlist","map","k","parse","peers","Peers","blocksReceived","BigInt","BlocksReceived","dataReceived","DataReceived","blocksSent","BlocksSent","dataSent","DataSent","dupBlksReceived","DupBlksReceived","dupDataReceived","DupDataReceived"],"sources":["/home/salex/Blockchain/Bootcamp-repositorio/32-DApp con React - Marketplace de NFTs/node_modules/ipfs-http-client/esm/src/bitswap/stat.js"],"sourcesContent":["import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createStat = configure(api => {\n  async function stat(options = {}) {\n    const res = await api.post('bitswap/stat', {\n      searchParams: toUrlSearchParams(options),\n      signal: options.signal,\n      headers: options.headers\n    });\n    return toCoreInterface(await res.json());\n  }\n  return stat;\n});\nfunction toCoreInterface(res) {\n  return {\n    provideBufLen: res.ProvideBufLen,\n    wantlist: (res.Wantlist || []).map(k => CID.parse(k['/'])),\n    peers: res.Peers || [],\n    blocksReceived: BigInt(res.BlocksReceived),\n    dataReceived: BigInt(res.DataReceived),\n    blocksSent: BigInt(res.BlocksSent),\n    dataSent: BigInt(res.DataSent),\n    dupBlksReceived: BigInt(res.DupBlksReceived),\n    dupDataReceived: BigInt(res.DupDataReceived)\n  };\n}"],"mappings":"AAAA,SAASA,GAAT,QAAoB,kBAApB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,OAAO,MAAMC,UAAU,GAAGF,SAAS,CAACG,GAAG,IAAI;EACzC,eAAeC,IAAf,GAAkC;IAAA,IAAdC,OAAc,uEAAJ,EAAI;IAChC,MAAMC,GAAG,GAAG,MAAMH,GAAG,CAACI,IAAJ,CAAS,cAAT,EAAyB;MACzCC,YAAY,EAAEP,iBAAiB,CAACI,OAAD,CADU;MAEzCI,MAAM,EAAEJ,OAAO,CAACI,MAFyB;MAGzCC,OAAO,EAAEL,OAAO,CAACK;IAHwB,CAAzB,CAAlB;IAKA,OAAOC,eAAe,CAAC,MAAML,GAAG,CAACM,IAAJ,EAAP,CAAtB;EACD;;EACD,OAAOR,IAAP;AACD,CAVkC,CAA5B;;AAWP,SAASO,eAAT,CAAyBL,GAAzB,EAA8B;EAC5B,OAAO;IACLO,aAAa,EAAEP,GAAG,CAACQ,aADd;IAELC,QAAQ,EAAE,CAACT,GAAG,CAACU,QAAJ,IAAgB,EAAjB,EAAqBC,GAArB,CAAyBC,CAAC,IAAInB,GAAG,CAACoB,KAAJ,CAAUD,CAAC,CAAC,GAAD,CAAX,CAA9B,CAFL;IAGLE,KAAK,EAAEd,GAAG,CAACe,KAAJ,IAAa,EAHf;IAILC,cAAc,EAAEC,MAAM,CAACjB,GAAG,CAACkB,cAAL,CAJjB;IAKLC,YAAY,EAAEF,MAAM,CAACjB,GAAG,CAACoB,YAAL,CALf;IAMLC,UAAU,EAAEJ,MAAM,CAACjB,GAAG,CAACsB,UAAL,CANb;IAOLC,QAAQ,EAAEN,MAAM,CAACjB,GAAG,CAACwB,QAAL,CAPX;IAQLC,eAAe,EAAER,MAAM,CAACjB,GAAG,CAAC0B,eAAL,CARlB;IASLC,eAAe,EAAEV,MAAM,CAACjB,GAAG,CAAC4B,eAAL;EATlB,CAAP;AAWD"},"metadata":{},"sourceType":"module"}