{"ast":null,"code":"import { modeToString } from '../lib/mode-to-string.js';\nimport { parseMtime } from '../lib/parse-mtime.js';\nimport { configure } from '../lib/configure.js';\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { abortSignal } from '../lib/abort-signal.js';\nexport const createWrite = configure(api => {\n  async function write(path, input) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const controller = new AbortController();\n    const signal = abortSignal(controller.signal, options.signal);\n    const res = await api.post('files/write', {\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        streamChannels: true,\n        count: options.length,\n        ...options\n      }),\n      ...(await multipartRequest([{\n        content: input,\n        path: 'arg',\n        mode: modeToString(options.mode),\n        mtime: parseMtime(options.mtime)\n      }], controller, options.headers))\n    });\n    await res.text();\n  }\n\n  return write;\n});","map":{"version":3,"names":["modeToString","parseMtime","configure","multipartRequest","toUrlSearchParams","abortSignal","createWrite","api","write","path","input","options","controller","AbortController","signal","res","post","searchParams","arg","streamChannels","count","length","content","mode","mtime","headers","text"],"sources":["/home/salex/Blockchain/Bootcamp-repositorio/32-DApp con React - Marketplace de NFTs/node_modules/ipfs-http-client/esm/src/files/write.js"],"sourcesContent":["import { modeToString } from '../lib/mode-to-string.js';\nimport { parseMtime } from '../lib/parse-mtime.js';\nimport { configure } from '../lib/configure.js';\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { abortSignal } from '../lib/abort-signal.js';\nexport const createWrite = configure(api => {\n  async function write(path, input, options = {}) {\n    const controller = new AbortController();\n    const signal = abortSignal(controller.signal, options.signal);\n    const res = await api.post('files/write', {\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        streamChannels: true,\n        count: options.length,\n        ...options\n      }),\n      ...await multipartRequest([{\n          content: input,\n          path: 'arg',\n          mode: modeToString(options.mode),\n          mtime: parseMtime(options.mtime)\n        }], controller, options.headers)\n    });\n    await res.text();\n  }\n  return write;\n});"],"mappings":"AAAA,SAASA,YAAT,QAA6B,0BAA7B;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,gBAAT,QAAiC,mCAAjC;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,OAAO,MAAMC,WAAW,GAAGJ,SAAS,CAACK,GAAG,IAAI;EAC1C,eAAeC,KAAf,CAAqBC,IAArB,EAA2BC,KAA3B,EAAgD;IAAA,IAAdC,OAAc,uEAAJ,EAAI;IAC9C,MAAMC,UAAU,GAAG,IAAIC,eAAJ,EAAnB;IACA,MAAMC,MAAM,GAAGT,WAAW,CAACO,UAAU,CAACE,MAAZ,EAAoBH,OAAO,CAACG,MAA5B,CAA1B;IACA,MAAMC,GAAG,GAAG,MAAMR,GAAG,CAACS,IAAJ,CAAS,aAAT,EAAwB;MACxCF,MADwC;MAExCG,YAAY,EAAEb,iBAAiB,CAAC;QAC9Bc,GAAG,EAAET,IADyB;QAE9BU,cAAc,EAAE,IAFc;QAG9BC,KAAK,EAAET,OAAO,CAACU,MAHe;QAI9B,GAAGV;MAJ2B,CAAD,CAFS;MAQxC,IAAG,MAAMR,gBAAgB,CAAC,CAAC;QACvBmB,OAAO,EAAEZ,KADc;QAEvBD,IAAI,EAAE,KAFiB;QAGvBc,IAAI,EAAEvB,YAAY,CAACW,OAAO,CAACY,IAAT,CAHK;QAIvBC,KAAK,EAAEvB,UAAU,CAACU,OAAO,CAACa,KAAT;MAJM,CAAD,CAAD,EAKnBZ,UALmB,EAKPD,OAAO,CAACc,OALD,CAAzB;IARwC,CAAxB,CAAlB;IAeA,MAAMV,GAAG,CAACW,IAAJ,EAAN;EACD;;EACD,OAAOlB,KAAP;AACD,CAtBmC,CAA7B"},"metadata":{},"sourceType":"module"}