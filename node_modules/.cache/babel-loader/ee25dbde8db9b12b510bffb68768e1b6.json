{"ast":null,"code":"import { Token, Type } from './token.js';\nimport { assertEnoughData, decodeErrPrefix } from './common.js';\nimport * as uint from './0uint.js';\nimport { encodeBytes } from './2bytes.js';\nimport { toString, slice } from './byte-utils.js';\n\nfunction toToken(data, pos, prefix, length, options) {\n  const totLength = prefix + length;\n  assertEnoughData(data, pos, totLength);\n  const tok = new Token(Type.string, toString(data, pos + prefix, pos + totLength), totLength);\n\n  if (options.retainStringBytes === true) {\n    tok.byteValue = slice(data, pos + prefix, pos + totLength);\n  }\n\n  return tok;\n}\n\nexport function decodeStringCompact(data, pos, minor, options) {\n  return toToken(data, pos, 1, minor, options);\n}\nexport function decodeString8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options), options);\n}\nexport function decodeString16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options), options);\n}\nexport function decodeString32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options), options);\n}\nexport function decodeString64(data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options);\n\n  if (typeof l === 'bigint') {\n    throw new Error(`${decodeErrPrefix} 64-bit integer string lengths not supported`);\n  }\n\n  return toToken(data, pos, 9, l, options);\n}\nexport const encodeString = encodeBytes;","map":{"version":3,"names":["Token","Type","assertEnoughData","decodeErrPrefix","uint","encodeBytes","toString","slice","toToken","data","pos","prefix","length","options","totLength","tok","string","retainStringBytes","byteValue","decodeStringCompact","minor","decodeString8","_minor","readUint8","decodeString16","readUint16","decodeString32","readUint32","decodeString64","l","readUint64","Error","encodeString"],"sources":["/home/salex/Blockchain/Bootcamp-repositorio/32-DApp con React - Marketplace de NFTs/node_modules/cborg/esm/lib/3string.js"],"sourcesContent":["import {\n  Token,\n  Type\n} from './token.js';\nimport {\n  assertEnoughData,\n  decodeErrPrefix\n} from './common.js';\nimport * as uint from './0uint.js';\nimport { encodeBytes } from './2bytes.js';\nimport {\n  toString,\n  slice\n} from './byte-utils.js';\nfunction toToken(data, pos, prefix, length, options) {\n  const totLength = prefix + length;\n  assertEnoughData(data, pos, totLength);\n  const tok = new Token(Type.string, toString(data, pos + prefix, pos + totLength), totLength);\n  if (options.retainStringBytes === true) {\n    tok.byteValue = slice(data, pos + prefix, pos + totLength);\n  }\n  return tok;\n}\nexport function decodeStringCompact(data, pos, minor, options) {\n  return toToken(data, pos, 1, minor, options);\n}\nexport function decodeString8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options), options);\n}\nexport function decodeString16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options), options);\n}\nexport function decodeString32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options), options);\n}\nexport function decodeString64(data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options);\n  if (typeof l === 'bigint') {\n    throw new Error(`${ decodeErrPrefix } 64-bit integer string lengths not supported`);\n  }\n  return toToken(data, pos, 9, l, options);\n}\nexport const encodeString = encodeBytes;"],"mappings":"AAAA,SACEA,KADF,EAEEC,IAFF,QAGO,YAHP;AAIA,SACEC,gBADF,EAEEC,eAFF,QAGO,aAHP;AAIA,OAAO,KAAKC,IAAZ,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SACEC,QADF,EAEEC,KAFF,QAGO,iBAHP;;AAIA,SAASC,OAAT,CAAiBC,IAAjB,EAAuBC,GAAvB,EAA4BC,MAA5B,EAAoCC,MAApC,EAA4CC,OAA5C,EAAqD;EACnD,MAAMC,SAAS,GAAGH,MAAM,GAAGC,MAA3B;EACAV,gBAAgB,CAACO,IAAD,EAAOC,GAAP,EAAYI,SAAZ,CAAhB;EACA,MAAMC,GAAG,GAAG,IAAIf,KAAJ,CAAUC,IAAI,CAACe,MAAf,EAAuBV,QAAQ,CAACG,IAAD,EAAOC,GAAG,GAAGC,MAAb,EAAqBD,GAAG,GAAGI,SAA3B,CAA/B,EAAsEA,SAAtE,CAAZ;;EACA,IAAID,OAAO,CAACI,iBAAR,KAA8B,IAAlC,EAAwC;IACtCF,GAAG,CAACG,SAAJ,GAAgBX,KAAK,CAACE,IAAD,EAAOC,GAAG,GAAGC,MAAb,EAAqBD,GAAG,GAAGI,SAA3B,CAArB;EACD;;EACD,OAAOC,GAAP;AACD;;AACD,OAAO,SAASI,mBAAT,CAA6BV,IAA7B,EAAmCC,GAAnC,EAAwCU,KAAxC,EAA+CP,OAA/C,EAAwD;EAC7D,OAAOL,OAAO,CAACC,IAAD,EAAOC,GAAP,EAAY,CAAZ,EAAeU,KAAf,EAAsBP,OAAtB,CAAd;AACD;AACD,OAAO,SAASQ,aAAT,CAAuBZ,IAAvB,EAA6BC,GAA7B,EAAkCY,MAAlC,EAA0CT,OAA1C,EAAmD;EACxD,OAAOL,OAAO,CAACC,IAAD,EAAOC,GAAP,EAAY,CAAZ,EAAeN,IAAI,CAACmB,SAAL,CAAed,IAAf,EAAqBC,GAAG,GAAG,CAA3B,EAA8BG,OAA9B,CAAf,EAAuDA,OAAvD,CAAd;AACD;AACD,OAAO,SAASW,cAAT,CAAwBf,IAAxB,EAA8BC,GAA9B,EAAmCY,MAAnC,EAA2CT,OAA3C,EAAoD;EACzD,OAAOL,OAAO,CAACC,IAAD,EAAOC,GAAP,EAAY,CAAZ,EAAeN,IAAI,CAACqB,UAAL,CAAgBhB,IAAhB,EAAsBC,GAAG,GAAG,CAA5B,EAA+BG,OAA/B,CAAf,EAAwDA,OAAxD,CAAd;AACD;AACD,OAAO,SAASa,cAAT,CAAwBjB,IAAxB,EAA8BC,GAA9B,EAAmCY,MAAnC,EAA2CT,OAA3C,EAAoD;EACzD,OAAOL,OAAO,CAACC,IAAD,EAAOC,GAAP,EAAY,CAAZ,EAAeN,IAAI,CAACuB,UAAL,CAAgBlB,IAAhB,EAAsBC,GAAG,GAAG,CAA5B,EAA+BG,OAA/B,CAAf,EAAwDA,OAAxD,CAAd;AACD;AACD,OAAO,SAASe,cAAT,CAAwBnB,IAAxB,EAA8BC,GAA9B,EAAmCY,MAAnC,EAA2CT,OAA3C,EAAoD;EACzD,MAAMgB,CAAC,GAAGzB,IAAI,CAAC0B,UAAL,CAAgBrB,IAAhB,EAAsBC,GAAG,GAAG,CAA5B,EAA+BG,OAA/B,CAAV;;EACA,IAAI,OAAOgB,CAAP,KAAa,QAAjB,EAA2B;IACzB,MAAM,IAAIE,KAAJ,CAAW,GAAG5B,eAAiB,8CAA/B,CAAN;EACD;;EACD,OAAOK,OAAO,CAACC,IAAD,EAAOC,GAAP,EAAY,CAAZ,EAAemB,CAAf,EAAkBhB,OAAlB,CAAd;AACD;AACD,OAAO,MAAMmB,YAAY,GAAG3B,WAArB"},"metadata":{},"sourceType":"module"}