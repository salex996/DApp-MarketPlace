{"ast":null,"code":"import { configure } from '../lib/configure.js';\nimport { createPut as createDagPut } from '../dag/put.js';\nexport const createPut = (codecs, options) => {\n  const fn = configure(api => {\n    const dagPut = createDagPut(codecs, options);\n\n    async function put(obj) {\n      let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return dagPut(obj, { ...options,\n        storeCodec: 'dag-pb',\n        hashAlg: 'sha2-256',\n        version: 1\n      });\n    }\n\n    return put;\n  });\n  return fn(options);\n};","map":{"version":3,"names":["configure","createPut","createDagPut","codecs","options","fn","api","dagPut","put","obj","storeCodec","hashAlg","version"],"sources":["/home/salex/Blockchain/Bootcamp-repositorio/32-DApp con React - Marketplace de NFTs/node_modules/ipfs-http-client/esm/src/object/put.js"],"sourcesContent":["import { configure } from '../lib/configure.js';\nimport { createPut as createDagPut } from '../dag/put.js';\nexport const createPut = (codecs, options) => {\n  const fn = configure(api => {\n    const dagPut = createDagPut(codecs, options);\n    async function put(obj, options = {}) {\n      return dagPut(obj, {\n        ...options,\n        storeCodec: 'dag-pb',\n        hashAlg: 'sha2-256',\n        version: 1\n      });\n    }\n    return put;\n  });\n  return fn(options);\n};"],"mappings":"AAAA,SAASA,SAAT,QAA0B,qBAA1B;AACA,SAASC,SAAS,IAAIC,YAAtB,QAA0C,eAA1C;AACA,OAAO,MAAMD,SAAS,GAAG,CAACE,MAAD,EAASC,OAAT,KAAqB;EAC5C,MAAMC,EAAE,GAAGL,SAAS,CAACM,GAAG,IAAI;IAC1B,MAAMC,MAAM,GAAGL,YAAY,CAACC,MAAD,EAASC,OAAT,CAA3B;;IACA,eAAeI,GAAf,CAAmBC,GAAnB,EAAsC;MAAA,IAAdL,OAAc,uEAAJ,EAAI;MACpC,OAAOG,MAAM,CAACE,GAAD,EAAM,EACjB,GAAGL,OADc;QAEjBM,UAAU,EAAE,QAFK;QAGjBC,OAAO,EAAE,UAHQ;QAIjBC,OAAO,EAAE;MAJQ,CAAN,CAAb;IAMD;;IACD,OAAOJ,GAAP;EACD,CAXmB,CAApB;EAYA,OAAOH,EAAE,CAACD,OAAD,CAAT;AACD,CAdM"},"metadata":{},"sourceType":"module"}