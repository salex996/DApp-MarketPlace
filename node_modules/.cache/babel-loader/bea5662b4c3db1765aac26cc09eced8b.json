{"ast":null,"code":"import { CID } from 'multiformats/cid';\nimport { objectToCamelWithMetadata } from '../lib/object-to-camel-with-metadata.js';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createLs = configure(api => {\n  async function* ls(path) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!path) {\n      throw new Error('ipfs.files.ls requires a path');\n    }\n\n    const res = await api.post('files/ls', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: CID.asCID(path) ? `/ipfs/${path}` : path,\n        long: true,\n        ...options,\n        stream: true\n      }),\n      headers: options.headers\n    });\n\n    for await (const result of res.ndjson()) {\n      if ('Entries' in result) {\n        for (const entry of result.Entries || []) {\n          yield toCoreInterface(objectToCamelWithMetadata(entry));\n        }\n      } else {\n        yield toCoreInterface(objectToCamelWithMetadata(result));\n      }\n    }\n  }\n\n  return ls;\n});\n\nfunction toCoreInterface(entry) {\n  if (entry.hash) {\n    entry.cid = CID.parse(entry.hash);\n  }\n\n  delete entry.hash;\n  entry.type = entry.type === 1 ? 'directory' : 'file';\n  return entry;\n}","map":{"version":3,"names":["CID","objectToCamelWithMetadata","configure","toUrlSearchParams","createLs","api","ls","path","options","Error","res","post","signal","searchParams","arg","asCID","long","stream","headers","result","ndjson","entry","Entries","toCoreInterface","hash","cid","parse","type"],"sources":["/home/salex/Blockchain/Bootcamp-repositorio/32-DApp con React - Marketplace de NFTs/node_modules/ipfs-http-client/esm/src/files/ls.js"],"sourcesContent":["import { CID } from 'multiformats/cid';\nimport { objectToCamelWithMetadata } from '../lib/object-to-camel-with-metadata.js';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createLs = configure(api => {\n  async function* ls(path, options = {}) {\n    if (!path) {\n      throw new Error('ipfs.files.ls requires a path');\n    }\n    const res = await api.post('files/ls', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: CID.asCID(path) ? `/ipfs/${ path }` : path,\n        long: true,\n        ...options,\n        stream: true\n      }),\n      headers: options.headers\n    });\n    for await (const result of res.ndjson()) {\n      if ('Entries' in result) {\n        for (const entry of result.Entries || []) {\n          yield toCoreInterface(objectToCamelWithMetadata(entry));\n        }\n      } else {\n        yield toCoreInterface(objectToCamelWithMetadata(result));\n      }\n    }\n  }\n  return ls;\n});\nfunction toCoreInterface(entry) {\n  if (entry.hash) {\n    entry.cid = CID.parse(entry.hash);\n  }\n  delete entry.hash;\n  entry.type = entry.type === 1 ? 'directory' : 'file';\n  return entry;\n}"],"mappings":"AAAA,SAASA,GAAT,QAAoB,kBAApB;AACA,SAASC,yBAAT,QAA0C,yCAA1C;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,OAAO,MAAMC,QAAQ,GAAGF,SAAS,CAACG,GAAG,IAAI;EACvC,gBAAgBC,EAAhB,CAAmBC,IAAnB,EAAuC;IAAA,IAAdC,OAAc,uEAAJ,EAAI;;IACrC,IAAI,CAACD,IAAL,EAAW;MACT,MAAM,IAAIE,KAAJ,CAAU,+BAAV,CAAN;IACD;;IACD,MAAMC,GAAG,GAAG,MAAML,GAAG,CAACM,IAAJ,CAAS,UAAT,EAAqB;MACrCC,MAAM,EAAEJ,OAAO,CAACI,MADqB;MAErCC,YAAY,EAAEV,iBAAiB,CAAC;QAC9BW,GAAG,EAAEd,GAAG,CAACe,KAAJ,CAAUR,IAAV,IAAmB,SAASA,IAAM,EAAlC,GAAsCA,IADb;QAE9BS,IAAI,EAAE,IAFwB;QAG9B,GAAGR,OAH2B;QAI9BS,MAAM,EAAE;MAJsB,CAAD,CAFM;MAQrCC,OAAO,EAAEV,OAAO,CAACU;IARoB,CAArB,CAAlB;;IAUA,WAAW,MAAMC,MAAjB,IAA2BT,GAAG,CAACU,MAAJ,EAA3B,EAAyC;MACvC,IAAI,aAAaD,MAAjB,EAAyB;QACvB,KAAK,MAAME,KAAX,IAAoBF,MAAM,CAACG,OAAP,IAAkB,EAAtC,EAA0C;UACxC,MAAMC,eAAe,CAACtB,yBAAyB,CAACoB,KAAD,CAA1B,CAArB;QACD;MACF,CAJD,MAIO;QACL,MAAME,eAAe,CAACtB,yBAAyB,CAACkB,MAAD,CAA1B,CAArB;MACD;IACF;EACF;;EACD,OAAOb,EAAP;AACD,CA1BgC,CAA1B;;AA2BP,SAASiB,eAAT,CAAyBF,KAAzB,EAAgC;EAC9B,IAAIA,KAAK,CAACG,IAAV,EAAgB;IACdH,KAAK,CAACI,GAAN,GAAYzB,GAAG,CAAC0B,KAAJ,CAAUL,KAAK,CAACG,IAAhB,CAAZ;EACD;;EACD,OAAOH,KAAK,CAACG,IAAb;EACAH,KAAK,CAACM,IAAN,GAAaN,KAAK,CAACM,IAAN,KAAe,CAAf,GAAmB,WAAnB,GAAiC,MAA9C;EACA,OAAON,KAAP;AACD"},"metadata":{},"sourceType":"module"}