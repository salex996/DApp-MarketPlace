{"ast":null,"code":"import { Multiaddr } from 'multiaddr';\nimport { isBrowser, isWebWorker, isNode } from 'ipfs-utils/src/env.js';\nimport parseDuration from 'parse-duration';\nimport debug from 'debug';\nimport HTTP from 'ipfs-utils/src/http.js';\nimport mergeOpts from 'merge-options';\nimport { toUrlString } from 'ipfs-core-utils/to-url-string';\nimport getAgent from 'ipfs-core-utils/agent';\nconst log = debug('ipfs-http-client:lib:error-handler');\nconst merge = mergeOpts.bind({\n  ignoreUndefined: true\n});\nconst DEFAULT_PROTOCOL = isBrowser || isWebWorker ? location.protocol : 'http';\nconst DEFAULT_HOST = isBrowser || isWebWorker ? location.hostname : 'localhost';\nconst DEFAULT_PORT = isBrowser || isWebWorker ? location.port : '5001';\n\nconst normalizeOptions = function () {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let url;\n  let opts = {};\n  let agent;\n\n  if (typeof options === 'string' || Multiaddr.isMultiaddr(options)) {\n    url = new URL(toUrlString(options));\n  } else if (options instanceof URL) {\n    url = options;\n  } else if (typeof options.url === 'string' || Multiaddr.isMultiaddr(options.url)) {\n    url = new URL(toUrlString(options.url));\n    opts = options;\n  } else if (options.url instanceof URL) {\n    url = options.url;\n    opts = options;\n  } else {\n    opts = options || {};\n    const protocol = (opts.protocol || DEFAULT_PROTOCOL).replace(':', '');\n    const host = (opts.host || DEFAULT_HOST).split(':')[0];\n    const port = opts.port || DEFAULT_PORT;\n    url = new URL(`${protocol}://${host}:${port}`);\n  }\n\n  if (opts.apiPath) {\n    url.pathname = opts.apiPath;\n  } else if (url.pathname === '/' || url.pathname === undefined) {\n    url.pathname = 'api/v0';\n  }\n\n  if (isNode) {\n    const Agent = getAgent(url);\n    agent = opts.agent || new Agent({\n      keepAlive: true,\n      maxSockets: 6\n    });\n  }\n\n  return { ...opts,\n    host: url.host,\n    protocol: url.protocol.replace(':', ''),\n    port: Number(url.port),\n    apiPath: url.pathname,\n    url,\n    agent\n  };\n};\n\nexport const errorHandler = async response => {\n  let msg;\n\n  try {\n    if ((response.headers.get('Content-Type') || '').startsWith('application/json')) {\n      const data = await response.json();\n      log(data);\n      msg = data.Message || data.message;\n    } else {\n      msg = await response.text();\n    }\n  } catch (err) {\n    log('Failed to parse error response', err);\n    msg = err.message;\n  }\n\n  let error = new HTTP.HTTPError(response);\n\n  if (msg) {\n    if (msg.includes('deadline has elapsed')) {\n      error = new HTTP.TimeoutError();\n    }\n\n    if (msg && msg.includes('context deadline exceeded')) {\n      error = new HTTP.TimeoutError();\n    }\n  }\n\n  if (msg && msg.includes('request timed out')) {\n    error = new HTTP.TimeoutError();\n  }\n\n  if (msg) {\n    error.message = msg;\n  }\n\n  throw error;\n};\nconst KEBAB_REGEX = /[A-Z\\u00C0-\\u00D6\\u00D8-\\u00DE]/g;\n\nconst kebabCase = str => {\n  return str.replace(KEBAB_REGEX, function (match) {\n    return '-' + match.toLowerCase();\n  });\n};\n\nconst parseTimeout = value => {\n  return typeof value === 'string' ? parseDuration(value) : value;\n};\n\nexport class Client extends HTTP {\n  constructor() {\n    var _this;\n\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const opts = normalizeOptions(options);\n    super({\n      timeout: parseTimeout(opts.timeout || 0) || undefined,\n      headers: opts.headers,\n      base: `${opts.url}`,\n      handleError: errorHandler,\n      transformSearchParams: search => {\n        const out = new URLSearchParams();\n\n        for (const [key, value] of search) {\n          if (value !== 'undefined' && value !== 'null' && key !== 'signal') {\n            out.append(kebabCase(key), value);\n          }\n\n          if (key === 'timeout' && !isNaN(value)) {\n            out.append(kebabCase(key), value);\n          }\n        }\n\n        return out;\n      },\n      agent: opts.agent\n    });\n    _this = this;\n    delete this.get;\n    delete this.put;\n    delete this.delete;\n    delete this.options;\n    const fetch = this.fetch;\n\n    this.fetch = function (resource) {\n      let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (typeof resource === 'string' && !resource.startsWith('/')) {\n        resource = `${opts.url}/${resource}`;\n      }\n\n      return fetch.call(_this, resource, merge(options, {\n        method: 'POST'\n      }));\n    };\n  }\n\n}\nexport const HTTPError = HTTP.HTTPError;","map":{"version":3,"names":["Multiaddr","isBrowser","isWebWorker","isNode","parseDuration","debug","HTTP","mergeOpts","toUrlString","getAgent","log","merge","bind","ignoreUndefined","DEFAULT_PROTOCOL","location","protocol","DEFAULT_HOST","hostname","DEFAULT_PORT","port","normalizeOptions","options","url","opts","agent","isMultiaddr","URL","replace","host","split","apiPath","pathname","undefined","Agent","keepAlive","maxSockets","Number","errorHandler","response","msg","headers","get","startsWith","data","json","Message","message","text","err","error","HTTPError","includes","TimeoutError","KEBAB_REGEX","kebabCase","str","match","toLowerCase","parseTimeout","value","Client","constructor","timeout","base","handleError","transformSearchParams","search","out","URLSearchParams","key","append","isNaN","put","delete","fetch","resource","call","method"],"sources":["/home/salex/Blockchain/Bootcamp-repositorio/32-DApp con React - Marketplace de NFTs/node_modules/ipfs-http-client/esm/src/lib/core.js"],"sourcesContent":["import { Multiaddr } from 'multiaddr';\nimport {\n  isBrowser,\n  isWebWorker,\n  isNode\n} from 'ipfs-utils/src/env.js';\nimport parseDuration from 'parse-duration';\nimport debug from 'debug';\nimport HTTP from 'ipfs-utils/src/http.js';\nimport mergeOpts from 'merge-options';\nimport { toUrlString } from 'ipfs-core-utils/to-url-string';\nimport getAgent from 'ipfs-core-utils/agent';\nconst log = debug('ipfs-http-client:lib:error-handler');\nconst merge = mergeOpts.bind({ ignoreUndefined: true });\nconst DEFAULT_PROTOCOL = isBrowser || isWebWorker ? location.protocol : 'http';\nconst DEFAULT_HOST = isBrowser || isWebWorker ? location.hostname : 'localhost';\nconst DEFAULT_PORT = isBrowser || isWebWorker ? location.port : '5001';\nconst normalizeOptions = (options = {}) => {\n  let url;\n  let opts = {};\n  let agent;\n  if (typeof options === 'string' || Multiaddr.isMultiaddr(options)) {\n    url = new URL(toUrlString(options));\n  } else if (options instanceof URL) {\n    url = options;\n  } else if (typeof options.url === 'string' || Multiaddr.isMultiaddr(options.url)) {\n    url = new URL(toUrlString(options.url));\n    opts = options;\n  } else if (options.url instanceof URL) {\n    url = options.url;\n    opts = options;\n  } else {\n    opts = options || {};\n    const protocol = (opts.protocol || DEFAULT_PROTOCOL).replace(':', '');\n    const host = (opts.host || DEFAULT_HOST).split(':')[0];\n    const port = opts.port || DEFAULT_PORT;\n    url = new URL(`${ protocol }://${ host }:${ port }`);\n  }\n  if (opts.apiPath) {\n    url.pathname = opts.apiPath;\n  } else if (url.pathname === '/' || url.pathname === undefined) {\n    url.pathname = 'api/v0';\n  }\n  if (isNode) {\n    const Agent = getAgent(url);\n    agent = opts.agent || new Agent({\n      keepAlive: true,\n      maxSockets: 6\n    });\n  }\n  return {\n    ...opts,\n    host: url.host,\n    protocol: url.protocol.replace(':', ''),\n    port: Number(url.port),\n    apiPath: url.pathname,\n    url,\n    agent\n  };\n};\nexport const errorHandler = async response => {\n  let msg;\n  try {\n    if ((response.headers.get('Content-Type') || '').startsWith('application/json')) {\n      const data = await response.json();\n      log(data);\n      msg = data.Message || data.message;\n    } else {\n      msg = await response.text();\n    }\n  } catch (err) {\n    log('Failed to parse error response', err);\n    msg = err.message;\n  }\n  let error = new HTTP.HTTPError(response);\n  if (msg) {\n    if (msg.includes('deadline has elapsed')) {\n      error = new HTTP.TimeoutError();\n    }\n    if (msg && msg.includes('context deadline exceeded')) {\n      error = new HTTP.TimeoutError();\n    }\n  }\n  if (msg && msg.includes('request timed out')) {\n    error = new HTTP.TimeoutError();\n  }\n  if (msg) {\n    error.message = msg;\n  }\n  throw error;\n};\nconst KEBAB_REGEX = /[A-Z\\u00C0-\\u00D6\\u00D8-\\u00DE]/g;\nconst kebabCase = str => {\n  return str.replace(KEBAB_REGEX, function (match) {\n    return '-' + match.toLowerCase();\n  });\n};\nconst parseTimeout = value => {\n  return typeof value === 'string' ? parseDuration(value) : value;\n};\nexport class Client extends HTTP {\n  constructor(options = {}) {\n    const opts = normalizeOptions(options);\n    super({\n      timeout: parseTimeout(opts.timeout || 0) || undefined,\n      headers: opts.headers,\n      base: `${ opts.url }`,\n      handleError: errorHandler,\n      transformSearchParams: search => {\n        const out = new URLSearchParams();\n        for (const [key, value] of search) {\n          if (value !== 'undefined' && value !== 'null' && key !== 'signal') {\n            out.append(kebabCase(key), value);\n          }\n          if (key === 'timeout' && !isNaN(value)) {\n            out.append(kebabCase(key), value);\n          }\n        }\n        return out;\n      },\n      agent: opts.agent\n    });\n    delete this.get;\n    delete this.put;\n    delete this.delete;\n    delete this.options;\n    const fetch = this.fetch;\n    this.fetch = (resource, options = {}) => {\n      if (typeof resource === 'string' && !resource.startsWith('/')) {\n        resource = `${ opts.url }/${ resource }`;\n      }\n      return fetch.call(this, resource, merge(options, { method: 'POST' }));\n    };\n  }\n}\nexport const HTTPError = HTTP.HTTPError;"],"mappings":"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"},"metadata":{},"sourceType":"module"}