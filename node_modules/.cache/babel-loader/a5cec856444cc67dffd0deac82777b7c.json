{"ast":null,"code":"import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createGet = configure(api => {\n  async function get(cid) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const res = await api.post('block/get', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cid.toString(),\n        ...options\n      }),\n      headers: options.headers\n    });\n    return new Uint8Array(await res.arrayBuffer());\n  }\n\n  return get;\n});","map":{"version":3,"names":["configure","toUrlSearchParams","createGet","api","get","cid","options","res","post","signal","searchParams","arg","toString","headers","Uint8Array","arrayBuffer"],"sources":["/home/salex/Blockchain/Bootcamp-repositorio/32-DApp con React - Marketplace de NFTs/node_modules/ipfs-http-client/esm/src/block/get.js"],"sourcesContent":["import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createGet = configure(api => {\n  async function get(cid, options = {}) {\n    const res = await api.post('block/get', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cid.toString(),\n        ...options\n      }),\n      headers: options.headers\n    });\n    return new Uint8Array(await res.arrayBuffer());\n  }\n  return get;\n});"],"mappings":"AAAA,SAASA,SAAT,QAA0B,qBAA1B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,OAAO,MAAMC,SAAS,GAAGF,SAAS,CAACG,GAAG,IAAI;EACxC,eAAeC,GAAf,CAAmBC,GAAnB,EAAsC;IAAA,IAAdC,OAAc,uEAAJ,EAAI;IACpC,MAAMC,GAAG,GAAG,MAAMJ,GAAG,CAACK,IAAJ,CAAS,WAAT,EAAsB;MACtCC,MAAM,EAAEH,OAAO,CAACG,MADsB;MAEtCC,YAAY,EAAET,iBAAiB,CAAC;QAC9BU,GAAG,EAAEN,GAAG,CAACO,QAAJ,EADyB;QAE9B,GAAGN;MAF2B,CAAD,CAFO;MAMtCO,OAAO,EAAEP,OAAO,CAACO;IANqB,CAAtB,CAAlB;IAQA,OAAO,IAAIC,UAAJ,CAAe,MAAMP,GAAG,CAACQ,WAAJ,EAArB,CAAP;EACD;;EACD,OAAOX,GAAP;AACD,CAbiC,CAA3B"},"metadata":{},"sourceType":"module"}