{"ast":null,"code":"import { normaliseInput } from './files/normalise-input-multiple.browser.js';\nimport { modeToString } from './mode-to-string.js';\nexport async function multipartRequest(source, abortController) {\n  let headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const parts = [];\n  const formData = new FormData();\n  let index = 0;\n  let total = 0;\n\n  for await (const {\n    content,\n    path,\n    mode,\n    mtime\n  } of normaliseInput(source)) {\n    let fileSuffix = '';\n    const type = content ? 'file' : 'dir';\n\n    if (index > 0) {\n      fileSuffix = `-${index}`;\n    }\n\n    let fieldName = type + fileSuffix;\n    const qs = [];\n\n    if (mode !== null && mode !== undefined) {\n      qs.push(`mode=${modeToString(mode)}`);\n    }\n\n    if (mtime != null) {\n      const {\n        secs,\n        nsecs\n      } = mtime;\n      qs.push(`mtime=${secs}`);\n\n      if (nsecs != null) {\n        qs.push(`mtime-nsecs=${nsecs}`);\n      }\n    }\n\n    if (qs.length) {\n      fieldName = `${fieldName}?${qs.join('&')}`;\n    }\n\n    if (content) {\n      formData.set(fieldName, content, path != null ? encodeURIComponent(path) : undefined);\n      const end = total + content.size;\n      parts.push({\n        name: path,\n        start: total,\n        end\n      });\n      total = end;\n    } else if (path != null) {\n      formData.set(fieldName, new File([''], encodeURIComponent(path), {\n        type: 'application/x-directory'\n      }));\n    } else {\n      throw new Error('path or content or both must be set');\n    }\n\n    index++;\n  }\n\n  return {\n    total,\n    parts,\n    headers,\n    body: formData\n  };\n}","map":{"version":3,"names":["normaliseInput","modeToString","multipartRequest","source","abortController","headers","parts","formData","FormData","index","total","content","path","mode","mtime","fileSuffix","type","fieldName","qs","undefined","push","secs","nsecs","length","join","set","encodeURIComponent","end","size","name","start","File","Error","body"],"sources":["/home/salex/Blockchain/Bootcamp-repositorio/32-DApp con React - Marketplace de NFTs/node_modules/ipfs-core-utils/esm/src/multipart-request.browser.js"],"sourcesContent":["import { normaliseInput } from './files/normalise-input-multiple.browser.js';\nimport { modeToString } from './mode-to-string.js';\nexport async function multipartRequest(source, abortController, headers = {}) {\n  const parts = [];\n  const formData = new FormData();\n  let index = 0;\n  let total = 0;\n  for await (const {content, path, mode, mtime} of normaliseInput(source)) {\n    let fileSuffix = '';\n    const type = content ? 'file' : 'dir';\n    if (index > 0) {\n      fileSuffix = `-${ index }`;\n    }\n    let fieldName = type + fileSuffix;\n    const qs = [];\n    if (mode !== null && mode !== undefined) {\n      qs.push(`mode=${ modeToString(mode) }`);\n    }\n    if (mtime != null) {\n      const {secs, nsecs} = mtime;\n      qs.push(`mtime=${ secs }`);\n      if (nsecs != null) {\n        qs.push(`mtime-nsecs=${ nsecs }`);\n      }\n    }\n    if (qs.length) {\n      fieldName = `${ fieldName }?${ qs.join('&') }`;\n    }\n    if (content) {\n      formData.set(fieldName, content, path != null ? encodeURIComponent(path) : undefined);\n      const end = total + content.size;\n      parts.push({\n        name: path,\n        start: total,\n        end\n      });\n      total = end;\n    } else if (path != null) {\n      formData.set(fieldName, new File([''], encodeURIComponent(path), { type: 'application/x-directory' }));\n    } else {\n      throw new Error('path or content or both must be set');\n    }\n    index++;\n  }\n  return {\n    total,\n    parts,\n    headers,\n    body: formData\n  };\n}"],"mappings":"AAAA,SAASA,cAAT,QAA+B,6CAA/B;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,OAAO,eAAeC,gBAAf,CAAgCC,MAAhC,EAAwCC,eAAxC,EAAuE;EAAA,IAAdC,OAAc,uEAAJ,EAAI;EAC5E,MAAMC,KAAK,GAAG,EAAd;EACA,MAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;EACA,IAAIC,KAAK,GAAG,CAAZ;EACA,IAAIC,KAAK,GAAG,CAAZ;;EACA,WAAW,MAAM;IAACC,OAAD;IAAUC,IAAV;IAAgBC,IAAhB;IAAsBC;EAAtB,CAAjB,IAAiDd,cAAc,CAACG,MAAD,CAA/D,EAAyE;IACvE,IAAIY,UAAU,GAAG,EAAjB;IACA,MAAMC,IAAI,GAAGL,OAAO,GAAG,MAAH,GAAY,KAAhC;;IACA,IAAIF,KAAK,GAAG,CAAZ,EAAe;MACbM,UAAU,GAAI,IAAIN,KAAO,EAAzB;IACD;;IACD,IAAIQ,SAAS,GAAGD,IAAI,GAAGD,UAAvB;IACA,MAAMG,EAAE,GAAG,EAAX;;IACA,IAAIL,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAKM,SAA9B,EAAyC;MACvCD,EAAE,CAACE,IAAH,CAAS,QAAQnB,YAAY,CAACY,IAAD,CAAQ,EAArC;IACD;;IACD,IAAIC,KAAK,IAAI,IAAb,EAAmB;MACjB,MAAM;QAACO,IAAD;QAAOC;MAAP,IAAgBR,KAAtB;MACAI,EAAE,CAACE,IAAH,CAAS,SAASC,IAAM,EAAxB;;MACA,IAAIC,KAAK,IAAI,IAAb,EAAmB;QACjBJ,EAAE,CAACE,IAAH,CAAS,eAAeE,KAAO,EAA/B;MACD;IACF;;IACD,IAAIJ,EAAE,CAACK,MAAP,EAAe;MACbN,SAAS,GAAI,GAAGA,SAAW,IAAIC,EAAE,CAACM,IAAH,CAAQ,GAAR,CAAc,EAA7C;IACD;;IACD,IAAIb,OAAJ,EAAa;MACXJ,QAAQ,CAACkB,GAAT,CAAaR,SAAb,EAAwBN,OAAxB,EAAiCC,IAAI,IAAI,IAAR,GAAec,kBAAkB,CAACd,IAAD,CAAjC,GAA0CO,SAA3E;MACA,MAAMQ,GAAG,GAAGjB,KAAK,GAAGC,OAAO,CAACiB,IAA5B;MACAtB,KAAK,CAACc,IAAN,CAAW;QACTS,IAAI,EAAEjB,IADG;QAETkB,KAAK,EAAEpB,KAFE;QAGTiB;MAHS,CAAX;MAKAjB,KAAK,GAAGiB,GAAR;IACD,CATD,MASO,IAAIf,IAAI,IAAI,IAAZ,EAAkB;MACvBL,QAAQ,CAACkB,GAAT,CAAaR,SAAb,EAAwB,IAAIc,IAAJ,CAAS,CAAC,EAAD,CAAT,EAAeL,kBAAkB,CAACd,IAAD,CAAjC,EAAyC;QAAEI,IAAI,EAAE;MAAR,CAAzC,CAAxB;IACD,CAFM,MAEA;MACL,MAAM,IAAIgB,KAAJ,CAAU,qCAAV,CAAN;IACD;;IACDvB,KAAK;EACN;;EACD,OAAO;IACLC,KADK;IAELJ,KAFK;IAGLD,OAHK;IAIL4B,IAAI,EAAE1B;EAJD,CAAP;AAMD"},"metadata":{},"sourceType":"module"}