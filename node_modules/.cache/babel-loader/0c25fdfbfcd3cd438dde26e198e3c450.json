{"ast":null,"code":"import { CID } from 'multiformats/cid';\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js';\nexport const decodePin = _ref => {\n  let {\n    Name: name,\n    Status: status,\n    Cid: cid\n  } = _ref;\n  return {\n    cid: CID.parse(cid),\n    name,\n    status\n  };\n};\nexport const encodeService = service => {\n  if (typeof service === 'string' && service !== '') {\n    return service;\n  } else {\n    throw new TypeError('service name must be passed');\n  }\n};\nexport const encodeCID = cid => {\n  if (CID.asCID(cid)) {\n    return cid.toString();\n  } else {\n    throw new TypeError(`CID instance expected instead of ${typeof cid}`);\n  }\n};\nexport const encodeQuery = _ref2 => {\n  let {\n    service,\n    cid,\n    name,\n    status,\n    all\n  } = _ref2;\n  const query = toUrlSearchParams({\n    service: encodeService(service),\n    name,\n    force: all ? true : undefined\n  });\n\n  if (cid) {\n    for (const value of cid) {\n      query.append('cid', encodeCID(value));\n    }\n  }\n\n  if (status) {\n    for (const value of status) {\n      query.append('status', value);\n    }\n  }\n\n  return query;\n};\nexport const encodeAddParams = _ref3 => {\n  let {\n    cid,\n    service,\n    background,\n    name,\n    origins\n  } = _ref3;\n  const params = toUrlSearchParams({\n    arg: encodeCID(cid),\n    service: encodeService(service),\n    name,\n    background: background ? true : undefined\n  });\n\n  if (origins) {\n    for (const origin of origins) {\n      params.append('origin', origin.toString());\n    }\n  }\n\n  return params;\n};","map":{"version":3,"names":["CID","toUrlSearchParams","decodePin","Name","name","Status","status","Cid","cid","parse","encodeService","service","TypeError","encodeCID","asCID","toString","encodeQuery","all","query","force","undefined","value","append","encodeAddParams","background","origins","params","arg","origin"],"sources":["/home/salex/Blockchain/Bootcamp-repositorio/32-DApp con React - Marketplace de NFTs/node_modules/ipfs-http-client/esm/src/pin/remote/utils.js"],"sourcesContent":["import { CID } from 'multiformats/cid';\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js';\nexport const decodePin = ({\n  Name: name,\n  Status: status,\n  Cid: cid\n}) => {\n  return {\n    cid: CID.parse(cid),\n    name,\n    status\n  };\n};\nexport const encodeService = service => {\n  if (typeof service === 'string' && service !== '') {\n    return service;\n  } else {\n    throw new TypeError('service name must be passed');\n  }\n};\nexport const encodeCID = cid => {\n  if (CID.asCID(cid)) {\n    return cid.toString();\n  } else {\n    throw new TypeError(`CID instance expected instead of ${ typeof cid }`);\n  }\n};\nexport const encodeQuery = ({service, cid, name, status, all}) => {\n  const query = toUrlSearchParams({\n    service: encodeService(service),\n    name,\n    force: all ? true : undefined\n  });\n  if (cid) {\n    for (const value of cid) {\n      query.append('cid', encodeCID(value));\n    }\n  }\n  if (status) {\n    for (const value of status) {\n      query.append('status', value);\n    }\n  }\n  return query;\n};\nexport const encodeAddParams = ({cid, service, background, name, origins}) => {\n  const params = toUrlSearchParams({\n    arg: encodeCID(cid),\n    service: encodeService(service),\n    name,\n    background: background ? true : undefined\n  });\n  if (origins) {\n    for (const origin of origins) {\n      params.append('origin', origin.toString());\n    }\n  }\n  return params;\n};"],"mappings":"AAAA,SAASA,GAAT,QAAoB,kBAApB;AACA,SAASC,iBAAT,QAAkC,mCAAlC;AACA,OAAO,MAAMC,SAAS,GAAG,QAInB;EAAA,IAJoB;IACxBC,IAAI,EAAEC,IADkB;IAExBC,MAAM,EAAEC,MAFgB;IAGxBC,GAAG,EAAEC;EAHmB,CAIpB;EACJ,OAAO;IACLA,GAAG,EAAER,GAAG,CAACS,KAAJ,CAAUD,GAAV,CADA;IAELJ,IAFK;IAGLE;EAHK,CAAP;AAKD,CAVM;AAWP,OAAO,MAAMI,aAAa,GAAGC,OAAO,IAAI;EACtC,IAAI,OAAOA,OAAP,KAAmB,QAAnB,IAA+BA,OAAO,KAAK,EAA/C,EAAmD;IACjD,OAAOA,OAAP;EACD,CAFD,MAEO;IACL,MAAM,IAAIC,SAAJ,CAAc,6BAAd,CAAN;EACD;AACF,CANM;AAOP,OAAO,MAAMC,SAAS,GAAGL,GAAG,IAAI;EAC9B,IAAIR,GAAG,CAACc,KAAJ,CAAUN,GAAV,CAAJ,EAAoB;IAClB,OAAOA,GAAG,CAACO,QAAJ,EAAP;EACD,CAFD,MAEO;IACL,MAAM,IAAIH,SAAJ,CAAe,oCAAoC,OAAOJ,GAAK,EAA/D,CAAN;EACD;AACF,CANM;AAOP,OAAO,MAAMQ,WAAW,GAAG,SAAuC;EAAA,IAAtC;IAACL,OAAD;IAAUH,GAAV;IAAeJ,IAAf;IAAqBE,MAArB;IAA6BW;EAA7B,CAAsC;EAChE,MAAMC,KAAK,GAAGjB,iBAAiB,CAAC;IAC9BU,OAAO,EAAED,aAAa,CAACC,OAAD,CADQ;IAE9BP,IAF8B;IAG9Be,KAAK,EAAEF,GAAG,GAAG,IAAH,GAAUG;EAHU,CAAD,CAA/B;;EAKA,IAAIZ,GAAJ,EAAS;IACP,KAAK,MAAMa,KAAX,IAAoBb,GAApB,EAAyB;MACvBU,KAAK,CAACI,MAAN,CAAa,KAAb,EAAoBT,SAAS,CAACQ,KAAD,CAA7B;IACD;EACF;;EACD,IAAIf,MAAJ,EAAY;IACV,KAAK,MAAMe,KAAX,IAAoBf,MAApB,EAA4B;MAC1BY,KAAK,CAACI,MAAN,CAAa,QAAb,EAAuBD,KAAvB;IACD;EACF;;EACD,OAAOH,KAAP;AACD,CAjBM;AAkBP,OAAO,MAAMK,eAAe,GAAG,SAA+C;EAAA,IAA9C;IAACf,GAAD;IAAMG,OAAN;IAAea,UAAf;IAA2BpB,IAA3B;IAAiCqB;EAAjC,CAA8C;EAC5E,MAAMC,MAAM,GAAGzB,iBAAiB,CAAC;IAC/B0B,GAAG,EAAEd,SAAS,CAACL,GAAD,CADiB;IAE/BG,OAAO,EAAED,aAAa,CAACC,OAAD,CAFS;IAG/BP,IAH+B;IAI/BoB,UAAU,EAAEA,UAAU,GAAG,IAAH,GAAUJ;EAJD,CAAD,CAAhC;;EAMA,IAAIK,OAAJ,EAAa;IACX,KAAK,MAAMG,MAAX,IAAqBH,OAArB,EAA8B;MAC5BC,MAAM,CAACJ,MAAP,CAAc,QAAd,EAAwBM,MAAM,CAACb,QAAP,EAAxB;IACD;EACF;;EACD,OAAOW,MAAP;AACD,CAbM"},"metadata":{},"sourceType":"module"}